clear variables; close all; clc;

nParameter = 2;
nIndividual = 5;
nParty = 10;                % Allowed values [1, 10]
gridSize = 100;
percentageToUpdate = 0.5;
neighbourhoodSize = 20;
changeWeight = 0.1;
unfairityWeight = 0.1;
nIteration = 1000;

partyColors = InitializePartyColors();
parameters = InitializeParameters(nParameter);

% Population [x, y, parameter, opinion]
population = InitializePopulation(nIndividual, gridSize, nParameter, nParty); 

parties = InitializeParties(nParty, nParameter);

[pieAx, hAxes, populationPlot, countryPlot] = ...
  InitializePlot(population, gridSize, parameters, nParty, partyColors);

for iIteration = 1:nIteration
    
    preferredParameters = population(:, 3:(2 + nParameter));
    
    happiness = CalculateHappiness(preferredParameters, parameters);
    
    opinions = population(:, (3 + nParameter):(2 + nParameter + nParty));
    
    [newParameters, government, votes] = RunElection(parties, opinions, parameters);
    
    UpdatePopulationPlot(populationPlot, population, happiness, votes, partyColors);
    
    UpdateCountryPlot(newParameters, government);
    
    newOpinions = ChangeOpinion(opinions, preferredParameters, government, newParameters, parameters, changeWeight, unfairityWeight);
    
    parameters = newParameters;
    
    population(:, (3 + nParameter):(2 + nParameter + nParty)) = newOpinions;
    
    population = CreateNextGeneration(population, percentageToUpdate, neighbourhoodSize, gridSize, nParameter, nParty);
    
end